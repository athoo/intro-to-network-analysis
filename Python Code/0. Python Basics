{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNEooHobs9u8eGIX3SEjf2b"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Find more learning materials here: https://www.python.org/about/gettingstarted/"],"metadata":{"id":"tQKtNrCHCUUR"}},{"cell_type":"markdown","source":["## 1. Basic Syntax"],"metadata":{"id":"dJhyrouYkkLF"}},{"cell_type":"code","source":["# Print Statement\n","print(\"Hello World\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_eiyVoJBiEPh","executionInfo":{"status":"ok","timestamp":1732784310609,"user_tz":-60,"elapsed":360,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"dc1c58fd-68db-48a0-c597-a42740406007"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello World\n"]}]},{"cell_type":"code","source":["# Print enters a newline after the string printed\n","print(\"Hello\")\n","print(\"World\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kt574aTWiR4P","executionInfo":{"status":"ok","timestamp":1732784348179,"user_tz":-60,"elapsed":356,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"8d9f6f99-8fae-467c-f101-4d31f6dc0ed8"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello\n","World\n"]}]},{"cell_type":"code","source":["# To add space at the end not newline\n","print(\"Hello\", end=\" \")\n","print(\"World\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a3HgxnLchtF_","executionInfo":{"status":"ok","timestamp":1732784377472,"user_tz":-60,"elapsed":255,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"0dd315bd-0f38-443b-9d3f-0ab2987455f4"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello World\n"]}]},{"cell_type":"code","source":["# This a comment\n","'''\n","This is a multi\n","line comment\n","'''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"rcI5HSjwhuUI","executionInfo":{"status":"ok","timestamp":1732688871645,"user_tz":-60,"elapsed":213,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"6f48f31d-4b7a-47c7-e9d8-d46ad64823f2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nThis is a multi\\nline comment\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["### Arithmetic Operators\n","\n","Python supports 7 arithmetic operations\n","- +(additon)\n","- -(Subtraction)\n","- *(Multiplication)\n","- /(Division)\n","- //(Integer Division)\n","-  %(Modulus)\n","- **(Exponential)"],"metadata":{"id":"3JTS7cW8iMoT"}},{"cell_type":"code","source":["# Addition\n","print( 5 + 6)\n","\n","# Subtraction\n","print( 10 - 7)\n","\n","# Multiplication\n","print( 6 * 7)\n","\n","# Division\n","print( 35 / 9)\n","\n","# Integer Division\n","print ( 35 // 9)\n","\n","# Modulus\n","print( 35 % 9)\n","\n","# Exponential\n","print( 5 ** 8)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MOP9i9tZiJCl","executionInfo":{"status":"ok","timestamp":1732784446348,"user_tz":-60,"elapsed":240,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"d405be4a-026c-48a0-fbda-9e3d4ce1e63b"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["11\n","3\n","42\n","3.888888888888889\n","3\n","8\n","390625\n"]}]},{"cell_type":"markdown","source":["### Relational Operators\n","There are 6 relational operators\n","- == (Equal)\n","- != (Not equal)\n","- \\> (Greater than)\n","- \\< (Less than \tx < y)\n","- \\>= (Greater than or equal to)\n","- <= \t(Less than or equal to)"],"metadata":{"id":"eaR9fX7eiRkN"}},{"cell_type":"code","source":["# greater than\n","print(45 > 34)\n","\n","# less than\n","print(45 < 34)\n","\n","# equal\n","print(45 == 34)\n","\n","# not equal\n","print(45 != 34)\n","\n","# less than or equal to\n","print(45 <= 34)\n","\n","# greater than or equal to\n","print(45 >= 34)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tdwav_TdiPP8","executionInfo":{"status":"ok","timestamp":1732784515460,"user_tz":-60,"elapsed":263,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"f3b5fc58-941f-4156-9ae5-a96c1abb614b"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","False\n","False\n","True\n","False\n","True\n"]}]},{"cell_type":"markdown","source":["### Logical Operations\n","There are mainly 3 logical operations\n","- and operator - Returns 1 when both operands is non-zero and returns True both are True\n","- or operator - Returns 1 when either of the operands are non-zero and returns True when either is True.\n","- not operator - Returns True when operand is zero or False"],"metadata":{"id":"vD3XquPciUen"}},{"cell_type":"code","source":["# And operator\n","print(0 and 3)\n","print(5 and 0)\n","print(0 and 0)\n","print(5 and 5)\n","\n","print((6 > 3) and (3 == 5))\n","\n","# Or operator\n","print(0 or 3)\n","print(5 or 0)\n","print(0 or 0)\n","print(5 or 5)\n","\n","\n","print((6 > 3) or (3 == 5))\n","\n","# Not operator\n","print(not 5)\n","print(not 0)\n","print( not (6<3))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BFD9vvkWiSxt","executionInfo":{"status":"ok","timestamp":1732691601121,"user_tz":-60,"elapsed":245,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"2e5f93b4-e388-4e0c-e88e-e525058db33b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","0\n","0\n","5\n","False\n","3\n","5\n","0\n","5\n","True\n","False\n","True\n","True\n"]}]},{"cell_type":"markdown","source":["### Variables and DataTypes"],"metadata":{"id":"1PyaTm8niXYI"}},{"cell_type":"code","source":["# Assignment\n","a = 12\n","b = 65\n","c = a * b\n","print( a * b)\n","print(c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e_6lwix-iVuw","executionInfo":{"status":"ok","timestamp":1732691633448,"user_tz":-60,"elapsed":223,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"2f610b31-af10-4004-f4bc-f12d6c8abe2f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["780\n","780\n"]}]},{"cell_type":"markdown","source":["### Variable naming rules\n","Variable names flow almost same set of rules like most other programming languages\n","\n","1.    A variable name must start with a letter or the underscore character\n","2.    A variable name cannot start with a number\n","3.    A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )\n","4.    Variable names are case-sensitive (age, Age and AGE are three different variables)\n"],"metadata":{"id":"Ur08Stzbiaf0"}},{"cell_type":"code","source":["adl_123= 123\n","print( adl_123)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vev9jiCbiYoI","executionInfo":{"status":"ok","timestamp":1732691636350,"user_tz":-60,"elapsed":234,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"e68d5ef9-e6c0-400f-e59c-18f9a132f041"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["123\n"]}]},{"cell_type":"markdown","source":["### Data types\n","- Text Type: \tstr\n","- Numeric Types: \tint, float, complex\n","- Sequence Types: \tlist, tuple, range\n","- Mapping Type: \tdict\n","- Set Types: \tset, frozenset\n","- Boolean Type: \tbool\n","- Binary Types: \tbytes, bytearray, memoryview\n","\n","[Note: Python supports auto-typecasting and doesn't imply user to provide data type of variable during declaration. Type of any variable can be checked using type(). ]"],"metadata":{"id":"pevTDvp2ienI"}},{"cell_type":"code","source":["a = [\"pingjing\", 'jana', 'mike']"],"metadata":{"id":"Cvca1EpLCczJ","executionInfo":{"status":"ok","timestamp":1732785090037,"user_tz":-60,"elapsed":221,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["a[2]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"8r7RJA1xCi5j","executionInfo":{"status":"ok","timestamp":1732785095677,"user_tz":-60,"elapsed":248,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"1e22f979-06f9-48a1-94ba-b853db79d40f"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'mike'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["b = (\"pingjing\", 'jana', 'mike')"],"metadata":{"id":"QInr3W2NCo09","executionInfo":{"status":"ok","timestamp":1732785126791,"user_tz":-60,"elapsed":292,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["c = [[\"apple\", \"banana\"], [\"beef\", \"pork\"]]"],"metadata":{"id":"wvITTsaoCrqT","executionInfo":{"status":"ok","timestamp":1732785228641,"user_tz":-60,"elapsed":375,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["print(c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YHcZKB4_DFGy","executionInfo":{"status":"ok","timestamp":1732785328163,"user_tz":-60,"elapsed":239,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"3b329432-69f4-4af8-e691-102a9ce59f89"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["[['apple', 'banana'], ['beef', 'pork']]\n"]}]},{"cell_type":"code","source":["x = 5\n","print(type(x))\n","x = \"Hello World\"\n","print(type(x))\n","x = 20\n","print(type(x))\n","x = 20.5\n","print(type(x))\n","x = 1j\n","print(type(x))\n","\n","# list items are ordered, changable\n","x = [\"apple\", 1,  \"banana\", \"cherry\"]\n","print(type(x))\n","\n","# tuple items are ordered, unchangeable\n","x = (\"apple\", \"banana\", \"cherry\")\n","print(type(x))\n","\n","x = range(6)\n","print(type(x))\n","\n","# dictionary stores key-value pairs\n","x = {\"name\" : \"John\", \"age\" : 36}\n","print(type(x))\n","\n","# set is unordered, unindexed, and nonduplicate\n","x = {\"apple\", \"banana\", \"cherry\"}\n","print(type(x))\n","\n","x = True\n","print(type(x))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jN5SDcx_icHC","executionInfo":{"status":"ok","timestamp":1732691638506,"user_tz":-60,"elapsed":231,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"dd989b22-db5c-4acd-cf3f-fbc53bdae4f0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'int'>\n","<class 'str'>\n","<class 'int'>\n","<class 'float'>\n","<class 'complex'>\n","<class 'list'>\n","<class 'tuple'>\n","<class 'range'>\n","<class 'dict'>\n","<class 'set'>\n","<class 'bool'>\n"]}]},{"cell_type":"code","source":["for i in range(1, 11):\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g-SUHn2_CNob","executionInfo":{"status":"ok","timestamp":1732785049270,"user_tz":-60,"elapsed":235,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"5482cb30-d3cf-4817-8f35-2b3608deb00e"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n"]}]},{"cell_type":"code","source":["students = {\n","    \"pingjing\": {\n","        \"major\": 'informatics'\n","    }\n","}"],"metadata":{"id":"t0lFomCGBncZ","executionInfo":{"status":"ok","timestamp":1732784912802,"user_tz":-60,"elapsed":422,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["students['pingjing']['major']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"2wztcvSRB4PA","executionInfo":{"status":"ok","timestamp":1732784929403,"user_tz":-60,"elapsed":360,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"31ff3216-5225-4df3-bd1f-b187ef6a3a1a"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'informatics'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# create a dictionary to save your class and time of the class\n","# calendar[\"class\"]\n","# print a list of classes\n","# calender[class_name]\n","# print the time of the class in the format of \"week_of_the_day\""],"metadata":{"id":"dwzyljC-Djco"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classes = [\"network science\", \"social computing\"]\n","calendar = {\n","    \"classes\": classes,\n","    \"network science\": \"Thursday\",\n","}"],"metadata":{"id":"Ln8wOfTfF2dE","executionInfo":{"status":"ok","timestamp":1732786038681,"user_tz":-60,"elapsed":562,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["calendar[\"classes\"]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bk7MwYFUF_-O","executionInfo":{"status":"ok","timestamp":1732786013929,"user_tz":-60,"elapsed":317,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"4cdafe3f-7c55-4b27-e3b9-a848dc15e5db"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['network science', 'social computing']"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["calendar['network science']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"-8YjgSgqGJ4x","executionInfo":{"status":"ok","timestamp":1732786051613,"user_tz":-60,"elapsed":231,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"9e5bd3a5-acc7-4ae0-e212-294e7e94484d"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Thursday'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["### Conditional Statements\n","Simply these are if, if-else and if-elif-else or combination of if-many elif-else"],"metadata":{"id":"0L-nK7N5ijyg"}},{"cell_type":"code","source":["x=6\n","# % modulus operator(mod.)\n","\n","if (x%2==0):\n","    print(\"Even\")\n","else:\n","    print(\"Odd\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-JjHL1riile8","executionInfo":{"status":"ok","timestamp":1732786444986,"user_tz":-60,"elapsed":267,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"7dfa07a3-6045-4d3c-89ce-161e7a58a3a2"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Even\n"]}]},{"cell_type":"code","source":["y=97\n","\n","if(y>90):\n","    print(\"Grade A\")\n","elif(y>=70):\n","    print(\"Grade B\")\n","elif(y>=60):\n","    print(\"Grade C\")\n","else:\n","    print(\"Grade F\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JBKW70c3ims1","executionInfo":{"status":"ok","timestamp":1732786531421,"user_tz":-60,"elapsed":248,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"7b591ea8-9af8-46b8-93bb-812ec87f11ae"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Grade A\n"]}]},{"cell_type":"markdown","source":["### Looping Conditions"],"metadata":{"id":"ZARnYvtZip_b"}},{"cell_type":"code","source":["for i in range(11,30):\n","    print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cm0lCD9Vin0-","executionInfo":{"status":"ok","timestamp":1732697027332,"user_tz":-60,"elapsed":219,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"c370cc05-a374-4460-8237-b9d9ab6c0d44"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["11\n","12\n","13\n","14\n","15\n","16\n","17\n","18\n","19\n","20\n","21\n","22\n","23\n","24\n","25\n","26\n","27\n","28\n","29\n"]}]},{"cell_type":"code","source":["i = 2\n","sum = 0\n","while i!=0:\n","  print(\"value of i: \", i)\n","  print(\"value of s: \", sum)\n","  sum = sum + i # 0 + 2\n","  i = i - 1 # 2 - 1\n","  print(\"value of i after calculation: \", i)\n","  print(\"value of s after calculation: \", sum)\n","\n","print(sum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lV5aKuIwirMp","executionInfo":{"status":"ok","timestamp":1732786998425,"user_tz":-60,"elapsed":225,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"d02f13f0-1015-46ee-93b5-eb27f5b9e5d0"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["value of i:  2\n","value of s:  0\n","value of i after calculation:  1\n","value of s after calculation:  2\n","value of i:  1\n","value of s:  2\n","value of i after calculation:  0\n","value of s after calculation:  3\n","3\n"]}]},{"cell_type":"markdown","source":["## 2. List and Functions\n","\n"],"metadata":{"id":"n8V_U2Xeit0N"}},{"cell_type":"markdown","source":["### Lists\n","A list is a collection which is ordered and changeable. In Python lists are written with square brackets."],"metadata":{"id":"12cnDH3KnbKn"}},{"cell_type":"code","source":["# define list\n","\n","num_list = [12, 65, 74, 82, 32.6, 71.4, 3.14]\n","names_list=['apple','microsoft','openai','google','intel']\n","math_constant_list = [ 2.71828, 3.1415926535, 1.32471, 3.3598856662]"],"metadata":{"id":"q3SUy-8Bisij","executionInfo":{"status":"ok","timestamp":1732787070157,"user_tz":-60,"elapsed":224,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["num_list.append(\"apple\")"],"metadata":{"id":"ahJuMfsuPzcs","executionInfo":{"status":"ok","timestamp":1732787106085,"user_tz":-60,"elapsed":230,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["num_list"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zzegF78sP4V4","executionInfo":{"status":"ok","timestamp":1732787107102,"user_tz":-60,"elapsed":217,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"3b319e2e-39ba-4ceb-c280-0df0db5a3795"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[12, 65, 74, 82, 32.6, 71.4, 3.14, 'apple']"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["list_a = []\n","print (type(list_a))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bekw7Z_onfSW","executionInfo":{"status":"ok","timestamp":1732697041413,"user_tz":-60,"elapsed":4,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"871bec4e-1dc4-4108-d263-6ccaa88b5055"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'list'>\n"]}]},{"cell_type":"markdown","source":["### **Indexing**\n","In python, Indexing starts from 0."],"metadata":{"id":"zgep96PFnj16"}},{"cell_type":"code","source":["# list starts from 0\n","num_list[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"357GujFyn-25","executionInfo":{"status":"ok","timestamp":1732787154184,"user_tz":-60,"elapsed":434,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"cbd406b5-ae3f-4eed-8a33-8808fb316e76"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["12"]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","source":["in Python, if you are stating indexing from negative numbers, it will traverse through the back of the list."],"metadata":{"id":"oDnrEoBBnqL4"}},{"cell_type":"code","source":["names_list[-1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"xWd9uM1tnnG9","executionInfo":{"status":"ok","timestamp":1732697044076,"user_tz":-60,"elapsed":3,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"fac766bc-7027-474e-dbf4-4a89af2ccdb5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'intel'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["names_list[-3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"5I37wTRUnsdU","executionInfo":{"status":"ok","timestamp":1732697044399,"user_tz":-60,"elapsed":2,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"3f627d33-d9c7-4288-bf69-0d0f3c95f445"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'openai'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["We can merge two list into one to create a 2D list"],"metadata":{"id":"YRicQKzdn4Bj"}},{"cell_type":"code","source":["merged_list=[num_list, math_constant_list]\n","merged_list"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R3l_RtgLnupN","executionInfo":{"status":"ok","timestamp":1732787193294,"user_tz":-60,"elapsed":231,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"3e29a50d-7631-4c80-8605-ad1ad76337af"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[12, 65, 74, 82, 32.6, 71.4, 3.14, 'apple'],\n"," [2.71828, 3.1415926535, 1.32471, 3.3598856662]]"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["merged_list[0][2]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FxD_mA5ZnyxK","executionInfo":{"status":"ok","timestamp":1732787211402,"user_tz":-60,"elapsed":219,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"f664786c-7218-4b02-a3db-25d7fa828999"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["74"]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["### Functions\n","Functions can be either built-in or user-defined. Lets look at some of the builtin functions"],"metadata":{"id":"nEZn5CuJnWy3"}},{"cell_type":"code","source":["# type() - Find the data type of any variable as discussed before\n","print(type(2))\n","\n","# print() is also a builtin function\n","print(\"Hello everyone\")\n","\n","# input()\n","a = input(\"Enter a number: \")\n","print(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0QGaSiOBiv1Z","executionInfo":{"status":"ok","timestamp":1732787278970,"user_tz":-60,"elapsed":29997,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"b42c274b-2292-4bbb-c130-d52b6e40f8a3"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'int'>\n","Hello everyone\n","Enter a number: Pingjing\n","Pingjing\n"]}]},{"cell_type":"code","source":["a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"5xmQDbdFK7Zh","executionInfo":{"status":"ok","timestamp":1732787289794,"user_tz":-60,"elapsed":229,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"75be529e-86c5-47d5-df14-a032af6ffcf1"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Pingjing'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["math_constant_list"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X9THOaDwLIMS","executionInfo":{"status":"ok","timestamp":1732787341725,"user_tz":-60,"elapsed":360,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"8d488994-c94b-4b77-8939-cf62a7dba671"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[2.71828, 3.1415926535, 1.32471, 3.3598856662]"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["# min() - minimum\n","min(math_constant_list)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IRDMWsq9iwwg","executionInfo":{"status":"ok","timestamp":1732787348792,"user_tz":-60,"elapsed":355,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"033bceae-f197-4a73-8fef-868e1cf83359"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.32471"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["max(math_constant_list)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8auDxcEfLeGg","executionInfo":{"status":"ok","timestamp":1732787436838,"user_tz":-60,"elapsed":462,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"41253969-73b5-487b-b00a-4b0a8fe652fb"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3.3598856662"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["names_list"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J8L2qpaWLMoZ","executionInfo":{"status":"ok","timestamp":1732787361229,"user_tz":-60,"elapsed":238,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"8b388e02-4cfb-413f-d6a8-d437923789f1"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['apple', 'microsoft', 'openai', 'google', 'intel']"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["# max() - maximum\n","max(names_list)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"PpE5Jmopiy4w","executionInfo":{"status":"ok","timestamp":1732787356470,"user_tz":-60,"elapsed":249,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"47a20755-0257-48d5-a360-8dc50f2aa0d4"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'openai'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["# len() - length\n","len(names_list)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0N5bp9uGi00s","executionInfo":{"status":"ok","timestamp":1732787469519,"user_tz":-60,"elapsed":1,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"beef4fa8-f99a-48f9-d6c1-b8eee3f472fd"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["# help() - check the details of the function\n","help(len)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tgG-cZIIi2po","executionInfo":{"status":"ok","timestamp":1679627998030,"user_tz":300,"elapsed":6,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"4b823d9a-b70e-4c9a-9006-7ce89ad2aac2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Help on built-in function len in module builtins:\n","\n","len(obj, /)\n","    Return the number of items in a container.\n","\n"]}]},{"cell_type":"code","source":["# range(n) - returns a range of numbers between 0 to n-1\n","print(range(6))\n","\n","# range(i,n) - returns a range of numbers between i to n-1\n","print(range(1,5))\n","\n","# range(i,n,a) - returns a range of numbers between i to n-1 differing by a\n","print(range(2,8,3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uR80-E3Qi3nj","executionInfo":{"status":"ok","timestamp":1679627999504,"user_tz":300,"elapsed":3,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"f5bac291-9da1-474a-8a3f-9b4b272801b5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["range(0, 6)\n","range(1, 5)\n","range(2, 8, 3)\n"]}]},{"cell_type":"code","source":["for i in range(2,8,2):\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g_CEeVmzL0PL","executionInfo":{"status":"ok","timestamp":1732787581181,"user_tz":-60,"elapsed":294,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"6d66a7f1-b09a-4732-aa8a-c59cc04c949c"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","4\n","6\n"]}]},{"cell_type":"markdown","source":["We define user defined function with the help of **def** keyword\n","\n","```\n","def function_name(params=default_value(optional)):\n","  function_definition\n","```"],"metadata":{"id":"Ci2wJe5Djlgt"}},{"cell_type":"code","source":["# return grade\n","def return_grade(y):\n","  if(y>90):\n","    return \"Grade A\"\n","  elif(y>=70):\n","    return \"Grade B\"\n","  elif(y>=60):\n","    return \"Grade C\"\n","  else:\n","    return \"Grade F\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SgbLI8QFjl0Z","executionInfo":{"status":"ok","timestamp":1732787767891,"user_tz":-60,"elapsed":693,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"4f80c273-d8c5-469e-a912-6f0f2dee0a78"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["Grade F\n"]}]},{"cell_type":"code","source":["return_grade(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"BYyK-Ck7Mx-C","executionInfo":{"status":"ok","timestamp":1732787783827,"user_tz":-60,"elapsed":322,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"91cb1fa5-bfdb-4ec2-a3b2-c6e90b79c9c4"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Grade F'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["def square(i):\n","  return i*i\n","\n","print(square(10))"],"metadata":{"id":"-_znEFlxMR9L"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#This function will greet you if you pass a name\n","def greet(username, n):\n","  return (\"Hello \"+ username +\" Nice to have you abroad\"),(\"You are the \" +str(n)+\"th customer\")\n","\n","greet(\"Palspal\",5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h2kfFX32jp2I","executionInfo":{"status":"ok","timestamp":1679672249960,"user_tz":300,"elapsed":313,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"226c66ab-6336-4ea1-fe27-923a7ac6ac27"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["100"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["# function with multiple return\n","elist = [10,50,30,12,6,8,100]\n","def efunc(b):\n","    highest = max(b)\n","    lowest = min(b)\n","    first = b[0]\n","    last = b[-1]\n","    return highest,lowest,first,last\n","\n","efunc(elist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q0_Q0QbRjq0b","executionInfo":{"status":"ok","timestamp":1679628004741,"user_tz":300,"elapsed":2,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"45ea09af-c46d-4f34-97a6-fd314aa2f499"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(100, 6, 10, 100)"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["# define a function to return if your input number is positive or negative. and return \">0\" or \"<0\" or \"=0\"\n","def check_positive(x):\n","  if x > 0:\n","    return \"positive\"\n","  elif x < 0:\n","    return \"negative\"\n","  else:\n","    return \"0\"\n"],"metadata":{"id":"qlopOMqMNCJ6","executionInfo":{"status":"ok","timestamp":1732788431984,"user_tz":-60,"elapsed":2,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["x = 10\n","check_positive(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"lb_XgqI2Nl4P","executionInfo":{"status":"ok","timestamp":1732788432589,"user_tz":-60,"elapsed":4,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"cc449ac0-aa32-4690-8856-006950f085a0"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'positive'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":53}]},{"cell_type":"markdown","source":["## 3. Packages\n"],"metadata":{"id":"3UqZyTcyp91P"}},{"cell_type":"code","source":["date.today()"],"metadata":{"id":"MsOLFTzEqPI5","colab":{"base_uri":"https://localhost:8080/","height":144},"executionInfo":{"status":"error","timestamp":1732788501740,"user_tz":-60,"elapsed":748,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"c1fa44bc-1198-42c4-854e-dc26b52c4979"},"execution_count":54,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'date' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-54-00a2c5e89627>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdate\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtoday\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'date' is not defined"]}]},{"cell_type":"code","source":["from datetime import date"],"metadata":{"id":"WIobJ0vPqKi2","executionInfo":{"status":"ok","timestamp":1732788587920,"user_tz":-60,"elapsed":266,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["date.today()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"faNmLOG_qBbI","executionInfo":{"status":"ok","timestamp":1732788593489,"user_tz":-60,"elapsed":246,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"c93e43a3-2035-4ff4-d15a-128d9e8d3ea9"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["datetime.date(2024, 11, 28)"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["# generate a random number?"],"metadata":{"id":"DR2N0B1TqFgs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import random"],"metadata":{"id":"ASm_uYkZqXaW","executionInfo":{"status":"ok","timestamp":1732788709684,"user_tz":-60,"elapsed":249,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["print(random.randint(0,9))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4eDEoHx-qZiX","executionInfo":{"status":"ok","timestamp":1732788714633,"user_tz":-60,"elapsed":214,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"8d45f5fa-17b3-4608-b620-8d14e004e0a3"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["4\n"]}]},{"cell_type":"code","source":["print(random.random())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ARomALNGqajO","executionInfo":{"status":"ok","timestamp":1732788741015,"user_tz":-60,"elapsed":253,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"5518a36a-38e8-420a-8307-b16d0550768b"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["0.24450877590983855\n"]}]},{"cell_type":"code","source":["random.seed(42)"],"metadata":{"id":"wzJQQLbzqqA6","executionInfo":{"status":"ok","timestamp":1732788781920,"user_tz":-60,"elapsed":305,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":["print(random.random())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f0Guz5L7qf4B","executionInfo":{"status":"ok","timestamp":1732788778619,"user_tz":-60,"elapsed":209,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"349f839f-86f2-4558-fb75-cf9b43485ad5"},"execution_count":68,"outputs":[{"output_type":"stream","name":"stdout","text":["0.025010755222666936\n"]}]},{"cell_type":"markdown","source":["## Exercise"],"metadata":{"id":"gyhMYmH84olB"}},{"cell_type":"code","source":["# Write a function to generate edges for a random network, specifying the number of nodes and the probability of two nodes connecting.\n","# Replace all ___ with right code.\n","\n","# Answer\n","import random\n","\n","def generate_random_network(num_nodes, probability):\n","  nodes = list(range(num_nodes))\n","  edges = set()\n","\n","  for i in range(num_nodes):\n","    for j in range(i + 1, num_nodes):\n","      if random.random() < probability:\n","        edges.add((i, j))\n","\n","  return [nodes, edges]"],"metadata":{"id":"yRPWRpmASE9l","executionInfo":{"status":"ok","timestamp":1732791184671,"user_tz":-60,"elapsed":336,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["generate_random_network(2, 0)"],"metadata":{"id":"eKrgpq-t4nuM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732791232792,"user_tz":-60,"elapsed":236,"user":{"displayName":"Pingjing Yang","userId":"11184708508977242890"}},"outputId":"645a39d5-7aac-45ab-f2fd-9dd3772b61ed"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[0, 1], set()]"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":[],"metadata":{"id":"pTGc7LSiZyzI"},"execution_count":null,"outputs":[]}]}